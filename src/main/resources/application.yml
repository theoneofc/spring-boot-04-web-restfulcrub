spring:
  datasource:
    username: root
    password: 73057
    url: jdbc:mysql://192.168.1.136:3306/company
    driver-class-name: com.mysql.cj.jdbc.Driver
    initialization-mode: always
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 连接池配置
      # 配置初始化大小、最小、最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 3000
      validation-query: SELECT 1 FROM DUAL
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      pool-prepared-statements: true
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      filters: stat,wall,slf4j
      # 配置web监控,默认配置也和下面相同(除用户名密码，enabled默认false外)，其他可以不配
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: root
        allow: 127.0.0.1
#        已经创建了数据表那么就注释掉别下次启动又新创建了
#    schema:
#      - classpath:department.sql
#      - classpath:employee.sql

mybatis:
  configuration:
    map-underscore-to-camel-case: true












#spring:
#  datasource:
#    data-username: root
#    data-password: root
#    url: jdbc:mysql://192.168.1.136:3306/jdbc?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
#    #    Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    initialization-mode: always
##    type: com.alibaba.druid.pool.DruidDataSource
#    #    schema:
#    #      -classpath:departmen.sql
#    initialSize: 5
#    minIdle: 5
#    maxActive: 20
#    maxWait: 60000
#    timeBetweenEvictionRunsMillis: 60000
#    minEvictableIdleTimeMillis: 300000
#    validationQuery: SELECT 1 FROM DUAL
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    poolPreparedStatements: true